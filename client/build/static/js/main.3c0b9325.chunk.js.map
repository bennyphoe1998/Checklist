{"version":3,"sources":["components/checkboxes.js","components/addActivity.js","components/editActivity.js","components/addDate.js","components/viewTopic.js","components/listTopics.js","App.js","index.js"],"names":["CheckBox","props","useState","currentState","checked","setChecked","useEffect","console","log","did","connectDateActivity","tid","aid","a","fetch","method","headers","error","message","disconnectDateActivity","type","onChange","AddActivity","activity","setActivity","onSubmitActivity","body","description","JSON","stringify","window","location","className","data-toggle","data-target","style","margin","id","class","data-dismiss","placeholder","value","e","target","onClick","EditActivity","editActivity","AddDate","Date","startDate","setStartDate","addDate","date","format","ViewTopic","state","name","activities","setActivities","dates","setDates","dateActivities","setDateActivities","getAllActivities","response","json","getAllDates","getAllDateActivity","checkDateActivitiy","i","length","deleteActivity","filter","position","left","map","ListTopics","topics","setTopics","newTopic","setNewTopic","getAllTopics","topicsArray","addTopic","deleteTopic","topic","width","history","push","pathname","navigateToTopic","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c0b9325.chunk.js","sourcesContent":["import React, {Fragment, useState, useEffect} from \"react\"\r\n\r\nconst CheckBox = (props) => {\r\n\r\n    const [checked, setChecked] = useState(props.currentState);\r\n\r\n    useEffect(() => {\r\n        console.log(props.currentState)\r\n        console.log(checked + \"TEST\")\r\n        console.log(props.did)\r\n    }, [])\r\n    \r\n\r\n    const handleChange = () => {\r\n        if (checked) {\r\n            disconnectDateActivity(props.tid, props.did, props.aid);\r\n        } else {\r\n            connectDateActivity(props.tid, props.did, props.aid);\r\n        }\r\n        setChecked(!checked);\r\n        console.log(\"CLICKED\")\r\n    }\r\n\r\n    const connectDateActivity = async(tid, did, aid) => {\r\n        try {\r\n            const response = await fetch(`/checklist/activitydate/${tid}&${aid}&${did}`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\" : \"application/json\"}\r\n            })\r\n            console.log(\"connected date and activity\")\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    }\r\n\r\n    const disconnectDateActivity = async(tid, did, aid) => {\r\n        try {\r\n            const response = await fetch(`/checklist/activitydate/${tid}&${aid}&${did}`, {\r\n                method: \"DELETE\",\r\n                headers: { \"Content-Type\" : \"application/json\"}\r\n            })\r\n            console.log(\"disconnected date and activity\")\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <input \r\n            type = \"checkbox\"\r\n            checked = {checked}\r\n            onChange = {handleChange} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CheckBox;","import React, {Fragment, useState} from \"react\"\r\n\r\nconst AddActivity = (props) => {\r\n\r\n    const [activity, setActivity] = useState(\"\");\r\n\r\n    const onSubmitActivity = async() => {\r\n        try {\r\n            const body = {\r\n                description: activity\r\n            }\r\n            const response = await fetch (`/checklist/activity/${props.tid}`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\" : \"application/json\"},\r\n                body: JSON.stringify(body)\r\n            })\r\n\r\n            window.location = \"/topic\"\r\n        } catch (error) {\r\n            console.error(error.message)\r\n        }    \r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            \r\n\r\n            \r\n<button type=\"button\" className=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#myModal\"  style = {{margin: \"5px\"}}>\r\n  Add Activity\r\n</button>\r\n\r\n\r\n<div className=\"modal\" id=\"myModal\">\r\n  <div className=\"modal-dialog\">\r\n    <div className=\"modal-content\">\r\n\r\n     \r\n      <div className=\"modal-header\">\r\n        <h4 className=\"modal-title\">New Activity</h4>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n      </div>\r\n\r\n      \r\n      <div className=\"modal-body\">\r\n        <input className = \"form-control\" \r\n        type = \"text\"\r\n        placeholder = \"activity\"\r\n        value = {activity}\r\n        onChange = {e => setActivity(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      \r\n      <div className=\"modal-footer\">\r\n        <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" className=\"btn btn-success\" data-dismiss=\"modal\" onClick = {onSubmitActivity}>Add</button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AddActivity","import React, {Fragment, useState} from \"react\"\r\n\r\nconst EditActivity = (props) => {\r\n\r\n    const [activity, setActivity] = useState(\"\");\r\n\r\n    const editActivity = async() => {\r\n        try {\r\n            const body = {\r\n                description : activity\r\n            }\r\n            console.log(props.aid);\r\n            const response = await fetch(`/checklist/activity/${props.tid}&${props.aid}`, {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\" : \"application/json\"},\r\n                body: JSON.stringify(body) \r\n\r\n            })\r\n            window.location = (\"/topic\")\r\n            console.log(\"updated activity\") \r\n        } catch (error) {\r\n            console.error(error.message)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            {console.log(props.aid + \" TEST\")}\r\n           \r\n<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${props.aid}`}>\r\n  Edit\r\n</button>\r\n\r\n\r\n<div class=\"modal\" id={`id${props.aid}`}>\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n\r\n      \r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">Edit Activity</h4>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n      </div>\r\n\r\n     \r\n      <div class=\"modal-body\">\r\n        <input className = \"form-control\"\r\n        type = \"text\"\r\n        placeholder = \"\"\r\n        value = {activity}\r\n        onChange = {e => setActivity(e.target.value)}/>\r\n      </div>\r\n\r\n     \r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" onClick = {editActivity}>Edit</button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default EditActivity","import React, {Fragment, useState} from \"react\"\r\nimport { format } from \"date-fns\"\r\n\r\nconst AddDate = (props) => {\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n    const addDate = async() => {\r\n        \r\n        try {\r\n            const body = {\r\n                date: format(startDate, \"yyyy-MM-dd\")\r\n            }\r\n            console.log(body)\r\n            const response = await fetch (`/checklist/date/${props.tid}`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\" : \"application/json\"},\r\n                body: JSON.stringify(body)\r\n            })\r\n            \r\n            window.location = \"/topic\"\r\n            window.location = \"/topic\"        \r\n        } catch (error) {\r\n            console.error(error.message)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            \r\n<button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#myModal3\">\r\n        Add Date\r\n</button>\r\n\r\n\r\n<div class=\"modal\" id=\"myModal3\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n\r\n      \r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">New Date</h4>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n      </div>\r\n\r\n     \r\n      <div class=\"modal-body\">\r\n          <input \r\n          className = \"form-control\"\r\n          type = \"date\"\r\n          value = {format(startDate, \"yyyy-MM-dd\")}\r\n          onChange = {e => setStartDate(new Date(e.target.value))}\r\n          />\r\n          \r\n        </div>\r\n      \r\n\r\n     \r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" onClick = {addDate}>Add</button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>    \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AddDate;","import React, {Fragment, useState, useEffect} from \"react\"\r\nimport { format } from \"date-fns\"\r\nimport Checkbox from \"./checkboxes\"\r\nimport AddActivity from \"./addActivity\";\r\nimport EditActivity from \"./editActivity\";\r\nimport AddDate from \"./addDate\"\r\nconst ViewTopic = (props) => {\r\n    const {name, tid} = props.location.state;\r\n\r\n    const [activities, setActivities] = useState([]);\r\n    const [dates, setDates] = useState([]);\r\n    const [dateActivities, setDateActivities] = useState([]);\r\n\r\n    const getAllActivities = async() => {\r\n        try {\r\n            const response = await fetch(`/checklist/activity/${tid}`, {\r\n                method: \"GET\",\r\n                headers: { \"Content-Type\" : \"application/json\"}\r\n            })\r\n            setActivities( await response.json());\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    }\r\n\r\n    const getAllDates = async() => {\r\n        try {\r\n            const response = await fetch (`/checklist/date/${tid}`, {\r\n                method: \"GET\",\r\n                headers: { \"Content-Type\" : \"application/json\"}\r\n            })\r\n            setDates( await response.json());\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    }\r\n\r\n    const getAllDateActivity = async() => {\r\n        try {\r\n            const response = await fetch (`/checklist/activitydate/${tid}`, {\r\n                method: \"GET\",\r\n                headers: { \"Content-Type\" : \"application/json\"}\r\n            })\r\n            setDateActivities(await response.json());    \r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    }\r\n\r\n\r\n    const checkDateActivitiy = (did, aid) => {\r\n        \r\n        for (var i = 0; i < dateActivities.length; i++) {\r\n            if (dateActivities[i].did === did && dateActivities[i].aid === aid) {\r\n                return true;\r\n                \r\n            } \r\n        }\r\n        return false;\r\n            \r\n    }\r\n\r\n    const deleteActivity = async(aid) => {\r\n        try {\r\n            const response = await fetch(`/checklist/activity/${tid}&${aid}`, {\r\n                method: \"DELETE\",\r\n                headers: { \"Content-Type\" : \"application/json\"} \r\n            })\r\n            console.log(\"deleted activity\")\r\n            setActivities(activities.filter(activity => \r\n                activity.aid !== aid\r\n            ))   \r\n        } catch (error) {\r\n            console.error(error.message)\r\n        }\r\n    }\r\n\r\n    const returnBack = () => {\r\n        window.location = \"/\";\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getAllDateActivity();\r\n        getAllActivities();\r\n        getAllDates();\r\n        \r\n    }, [])\r\n    return(\r\n        <Fragment>\r\n            <button className = \"btn btn-primary\" style = {{position: \"absolute\",\r\n                                                            left: \"0px\" }} onClick = {returnBack}>Back</button>\r\n            <h1>{name}</h1>\r\n            <AddActivity \r\n            tid = {tid}/>\r\n            <AddDate \r\n            tid = {tid}/>\r\n            <table class=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th>Activity</th>\r\n        <th>Edit</th>\r\n        <th>Delete</th>\r\n        {dates.map(date => (\r\n            <th>{format(new Date(date.date), \"dd.MM.yyyy\")}</th>    \r\n        ))}\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n        {\r\n            activities.map(activity => (\r\n                <tr key = {activity.aid}>\r\n                    <td>{activity.description}</td>\r\n                    <td><EditActivity\r\n                    tid = {tid}\r\n                    aid = {activity.aid} /></td>\r\n                    <td><button className = \"btn btn-danger\" onClick = {() => deleteActivity(activity.aid)}>Delete</button></td>\r\n                    {dates.map(date => ( \r\n                        <td><Checkbox \r\n                        tid = {tid}\r\n                        currentState = {checkDateActivitiy(date.did, activity.aid)}\r\n                        did = {date.did}\r\n                        aid = {activity.aid} /></td> \r\n                    ))}\r\n                </tr>\r\n            ))\r\n        }\r\n      \r\n    </tbody>\r\n  </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ViewTopic;","import React, {Fragment, useState, useEffect} from \"react\";\r\nimport ViewTopic from \"./viewTopic\";\r\n\r\nconst ListTopics = (props) => {\r\n\r\n    const [topics, setTopics] = useState([]);\r\n    const [newTopic, setNewTopic] = useState(\"\");\r\n\r\n    const getAllTopics = async() => {\r\n        try {\r\n            const response = await fetch (\"/checklist\", {\r\n            method: \"GET\",\r\n            headers: { \"Content-Type\" : \"application/json\"}\r\n            })\r\n            const topicsArray = await response.json();\r\n            setTopics(topicsArray);        \r\n        } catch (error) {\r\n          console.error(error.message)  \r\n        }\r\n    }\r\n        \r\n\r\n    useEffect(() => {\r\n        getAllTopics();\r\n    }, [])\r\n\r\n    const navigateToTopic = (topic) => {\r\n        props.history.push({\r\n            pathname: '/topic',\r\n            state: topic\r\n        })\r\n    }\r\n\r\n    const addTopic = async() => {\r\n      try {\r\n        const body = {\r\n          name: newTopic\r\n        }\r\n        const response = await fetch (\"/checklist\", {\r\n          method : \"POST\",\r\n          headers: { \"Content-Type\" : \"application/json\"},\r\n          body: JSON.stringify(body)\r\n        })\r\n      } catch (error) {\r\n        console.error(error.message)\r\n      }  \r\n    }\r\n\r\n    const deleteTopic = async(tid) => {\r\n      try {\r\n        const response = await fetch (`/checklist/${tid}`, {\r\n          method: \"DELETE\",\r\n          headers: { \"Content-Type\" : \"application/json\"},\r\n        })\r\n        setTopics(topics.filter(topic => (\r\n          topic.tid !== tid\r\n        )))  \r\n      } catch (error) {\r\n        console.error(error.message)\r\n      }\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n          <h1>Check it to win it</h1>\r\n          <div style = {{position: \"relative\", width : \"50%\", margin : \"0 auto\", left :\"170px\"}}>\r\n            <form className = \"d-flex\">\r\n            <input className = \"form-control\"\r\n            style = {{width : \"600px\"}}\r\n            type = \"text\"\r\n            placeholder = \"new topic\"\r\n            value = {newTopic}\r\n            onChange = {e => setNewTopic(e.target.value)} />\r\n            <button className = \"btn btn-success\" onClick = {addTopic}>Add</button>\r\n            </form>\r\n            </div>\r\n            <h2>Your Topics: </h2>\r\n            <table className=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th>Topic</th>\r\n        <th>Delete</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {/*<tr>\r\n        <td>John</td>\r\n        <td>Doe</td>\r\n        <td>john@example.com</td>\r\n      </tr>\r\n      */}\r\n    {\r\n        topics.map(topic => (\r\n            <tr key = {topic.tid}>\r\n                <td><button className = \"btn btn-success\" onClick = {() => navigateToTopic(topic)}>{topic.name}</button></td>\r\n                <td><button className = \"btn btn-danger\" onClick = {() => deleteTopic(topic.tid)}>Delete</button></td>\r\n            </tr>\r\n        ))\r\n    }\r\n    </tbody>\r\n  </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListTopics;","import React from \"react\"\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ListTopics from \"./components/listTopics\";\nimport ViewTopic from \"./components/viewTopic\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route path=\"/\" component={ListTopics} exact/> \n        <Route path=\"/topic\" component={ViewTopic} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}